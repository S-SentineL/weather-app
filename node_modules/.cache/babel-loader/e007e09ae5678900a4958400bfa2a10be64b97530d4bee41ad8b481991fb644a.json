{"ast":null,"code":"var _jsxFileName = \"/Users/mahijith/Documents/repos/weather-app/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { FaExclamationCircle, FaChartLine, FaMapMarkerAlt, FaTachometerAlt, FaWind, FaEye, FaCloud, FaSun, FaMoon } from 'react-icons/fa';\n\n// Clear Weather\n\nimport eveningsky from 'https://github.com/user-attachments/assets/6e3bae4e-0ca6-4328-a089-81d50978f46d';\nimport nightsky from 'https://github.com/user-attachments/assets/6f711a38-2969-4eab-bc13-986d3872b76a';\n\n// Cloudy Weather\nimport fewclouds from 'https://github.com/user-attachments/assets/e42051f6-c3f4-4d34-b5d5-4f5e890a895c';\nimport scatteredclouds from 'https://github.com/user-attachments/assets/0e57c792-a251-4fa0-9a95-b7e9cf74b5df';\nimport brokenclouds from 'https://imgur.com/N6XPp0z';\nimport overcastclouds from 'https://github.com/user-attachments/assets/8962a9ad-462a-4cba-a983-bcbf298a72a0';\nimport cloudyday from 'https://github.com/user-attachments/assets/85d18a6d-858a-45bf-9974-d9153ad8ffc5';\nimport cloudynight from 'https://github.com/user-attachments/assets/f0f0d0cb-c17e-4b21-b6c7-c9cf70549717';\n\n// Rainy Weather\nimport lightRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport moderateRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport heavyRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport veryHeavyRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport extremeRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport freezingRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport showerRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport defaultRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\n\n// Snowy Weather\nimport lightSnow from 'https://github.com/user-attachments/assets/07129571-dd05-46d6-890e-dc58223df36b';\nimport snow from 'https://github.com/user-attachments/assets/71cc8e66-dc2a-49fc-b885-db12d7e85bea';\nimport heavySnow from 'https://github.com/user-attachments/assets/818507f8-d87e-4d2e-863d-56db894fe6ef';\nimport sleet from 'https://github.com/user-attachments/assets/5e542324-23f7-471f-9c33-a68fb8d87d49';\n\n// Other Weather Conditions\nimport mist from 'https://github.com/user-attachments/assets/1eb7de01-776f-47ee-a6ec-a6e98f760633';\nimport fog from 'https://github.com/user-attachments/assets/10c98ff2-2d66-44b3-9a3f-6228acca3d80';\nimport dust from 'https://github.com/user-attachments/assets/c1baf36e-a4d8-4270-9108-2e0ce051becb';\nimport sand from 'https://github.com/user-attachments/assets/2467f0b1-7085-425b-be2b-5c3ee7a1e823';\nimport ash from 'https://imgur.com/KUSLKof';\nimport squall from 'https://github.com/user-attachments/assets/bd83c036-099f-4e07-89bf-a54694bf47c3';\nimport tornado from 'https://github.com/user-attachments/assets/1252c7ad-cf0f-4c5b-979c-5fb1d5bd7228';\nimport haze from 'https://github.com/user-attachments/assets/33d52033-8958-4c99-b2a4-d25e83b82476';\nimport smoke from 'https://github.com/user-attachments/assets/bfb2eac9-376b-4e11-abcb-fbd81c369557';\n\n// Thunderstorm Weather\nimport thunderstormLightRain from 'https://github.com/user-attachments/assets/7b296170-2045-429a-a8d2-4923cf43ebcd';\nimport thunderstormRain from 'https://github.com/user-attachments/assets/e30eb39a-b85f-4228-aa25-928a1371760a';\nimport thunderstormHeavyRain from 'https://github.com/user-attachments/assets/60eb04a2-f5ef-47a5-ae5b-c5f7d016b600';\nimport thunderstormLightSnow from 'https://github.com/user-attachments/assets/f9aefb0c-8763-419c-ae60-5e32161969c6';\nimport thunderstormSnow from 'https://github.com/user-attachments/assets/570c0b65-4d28-4815-a8a9-d22fc539900a';\nimport thunderstorm from 'https://github.com/user-attachments/assets/5f854f05-5f98-4994-9fbe-d880c0fbda95';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = '82c64fe267e32fca1a228e088faf5033';\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$(),\n    _weatherData$weather$5;\n  const [city, setCity] = useState('');\n  const [inputCity, setInputCity] = useState('');\n  const [cityOffset, setCityOffset] = useState(0);\n  const [weatherData, setWeatherData] = useState(null);\n  const [units, setUnits] = useState('metric');\n  const [loading, setLoading] = useState(true);\n  const [forecastData, setForecastData] = useState([]);\n  const [searchOpen, setSearchOpen] = useState(false);\n  const [recentlySearched, setRecentlySearched] = useState([{\n    name: 'Delhi, India',\n    temp: '',\n    description: ''\n  }, {\n    name: 'New York, USA',\n    temp: '',\n    description: ''\n  }]);\n  const renderRainAnimation = () => {\n    if (weatherData && weatherData.weather[0].main.toLowerCase().includes('rain')) {\n      const rainCondition = weatherData.weather[0].description.toLowerCase();\n      let speedClass = '';\n      if (rainCondition.includes('light')) {\n        speedClass = 'light-rain';\n      } else if (rainCondition.includes('moderate')) {\n        speedClass = 'moderate-rain';\n      } else if (rainCondition.includes('heavy')) {\n        speedClass = 'heavy-rain';\n      }\n      const generateRaindrops = layer => {\n        return Array.from({\n          length: 100\n        }).map((_, index) => {\n          const randomDelay = Math.random() * 2;\n          const randomLeft = Math.random() * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"raindrop\",\n            style: {\n              left: `${randomLeft}vw`,\n              animationDelay: `${randomDelay}s`\n            }\n          }, `${layer}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this);\n        });\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rain-container ${speedClass}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rain-layer\",\n          children: generateRaindrops(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rain-layer\",\n          children: generateRaindrops(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this);\n    }\n    return null;\n  };\n  const getTimeOfDay = offset => {\n    const utcTime = Date.now();\n    const locationTime = new Date(utcTime + offset * 1000); // Apply the timezone offset\n    const hour = locationTime.getHours(); // Get the hour in local time\n\n    if (hour >= 5 && hour < 12) {\n      return 'day';\n    } else if (hour >= 12 && hour < 17) {\n      return 'afternoon';\n    } else if (hour >= 17 && hour < 21) {\n      return 'evening';\n    } else {\n      return 'night';\n    }\n  };\n  const fetchWeather = async (city, lat, lon) => {\n    let weatherAPI, forecastAPI;\n    if (city) {\n      weatherAPI = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`;\n      forecastAPI = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`;\n    } else if (lat && lon) {\n      weatherAPI = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n      forecastAPI = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n    }\n    try {\n      setLoading(true);\n\n      // Fetch current weather data\n      const weatherResponse = await fetch(weatherAPI);\n      const weatherData = await weatherResponse.json();\n      if (weatherData.cod === 200) {\n        setWeatherData(weatherData);\n        const timezoneOffset = weatherData.timezone; // Extract timezone offset in seconds\n        setCityOffset(timezoneOffset); // Update the offset for live location time\n\n        const timeOfDay = getTimeOfDay(timezoneOffset); // Pass the timezone offset here\n        const weatherCondition = weatherData.weather[0].main.toLowerCase();\n        const backgroundImage = getWeatherImage(weatherCondition, timeOfDay);\n        document.body.style.backgroundImage = `url(${backgroundImage})`;\n\n        // Fetch forecast data\n        const forecastResponse = await fetch(forecastAPI);\n        const forecastData = await forecastResponse.json();\n        if (forecastData.cod === '200' && forecastData.list && forecastData.list.length > 0) {\n          const dailyForecasts = forecastData.list.reduce((acc, entry) => {\n            const date = new Date(entry.dt * 1000).toLocaleDateString();\n            if (!acc[date]) {\n              acc[date] = {\n                temp: Math.round(entry.main.temp),\n                description: entry.weather[0].description,\n                high: Math.round(entry.main.temp_max),\n                low: Math.round(entry.main.temp_min),\n                date: date\n              };\n            }\n            return acc;\n          }, {});\n          setForecastData(Object.values(dailyForecasts).slice(0, 5));\n          setCity(city || forecastData.city.name);\n          await updateRecentlySearched(city || forecastData.city.name, weatherData);\n        } else {\n          console.error('Error fetching forecast data:', forecastData.message);\n        }\n      } else {\n        console.error('Error fetching current weather data:', weatherData.message);\n        setWeatherData(null);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setLoading(false);\n    }\n  };\n  const updateRecentlySearched = async (cityName, currentWeather) => {\n    const newSearch = {\n      name: cityName,\n      temp: `${Math.round(currentWeather.main.temp)}°`,\n      description: currentWeather.weather[0].description\n    };\n    setRecentlySearched(prev => {\n      const updatedSearch = [newSearch, ...prev.filter(item => item.name !== newSearch.name)].slice(0, 2);\n      return updatedSearch;\n    });\n  };\n  const fetchRecentCitiesWeather = async () => {\n    try {\n      const updatedCities = await Promise.all(recentlySearched.map(async location => {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location.name}&appid=${API_KEY}&units=metric`);\n        const data = await response.json();\n        if (data.cod === 200) {\n          return {\n            name: location.name,\n            temp: `${Math.round(data.main.temp)}°`,\n            description: data.weather[0].description\n          };\n        } else {\n          console.error(`Error fetching data for ${location.name}: ${data.message}`);\n          return location; // Keep the initial city name if fetch fails\n        }\n      }));\n      setRecentlySearched(updatedCities);\n    } catch (error) {\n      console.error(\"Error fetching recent cities' weather data:\", error);\n    }\n  };\n  useEffect(() => {\n    // Get user's location and fetch weather\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      fetchWeather('', latitude, longitude);\n    });\n  }, [units]);\n  useEffect(() => {\n    fetchRecentCitiesWeather();\n  }, []);\n  const weatherImages = {\n    clear: {\n      day: 'https://i.imgur.com/IUk42lM.png',\n      afternoon: afternoonsky,\n      evening: eveningsky,\n      night: nightsky\n    },\n    cloudy: {\n      few: fewclouds,\n      scattered: scatteredclouds,\n      broken: brokenclouds,\n      overcast: overcastclouds\n    },\n    rain: {\n      light: lightRain,\n      moderate: moderateRain,\n      heavy: heavyRain,\n      veryHeavy: veryHeavyRain,\n      extreme: extremeRain,\n      freezing: freezingRain,\n      shower: showerRain,\n      default: defaultRain\n    },\n    snow: {\n      light: lightSnow,\n      moderate: snow,\n      heavy: heavySnow,\n      sleet: sleet\n    },\n    mist: mist,\n    fog: fog,\n    dust: dust,\n    sand: sand,\n    ash: ash,\n    squall: squall,\n    tornado: tornado,\n    haze: haze,\n    thunderstorm: {\n      lightRain: thunderstormLightRain,\n      rain: thunderstormRain,\n      heavyRain: thunderstormHeavyRain,\n      lightSnow: thunderstormLightSnow,\n      snow: thunderstormSnow,\n      general: thunderstorm\n    },\n    other: {\n      drizzle: lightRain\n    }\n  };\n  const getWeatherImage = (weatherCondition, description) => {\n    var _weatherData$weather$, _weatherImages$cloudy, _weatherImages$cloudy2, _weatherImages$cloudy3, _weatherImages$cloudy4, _weatherData$weather$2, _weatherData$weather$3, _weatherData$weather$4;\n    const timeOfDay = getTimeOfDay(); // Get the current time of day\n\n    switch (weatherCondition.toLowerCase()) {\n      case 'clear':\n        return weatherImages.clear[timeOfDay] || weatherImages.clear.day;\n      case 'clouds':\n        const description = weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather$ = weatherData.weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.description; // Get the description safely\n        switch (description === null || description === void 0 ? void 0 : description.toLowerCase().trim()) {\n          // Adding trim to remove any extra spaces\n          case 'few clouds':\n            return ((_weatherImages$cloudy = weatherImages.cloudy) === null || _weatherImages$cloudy === void 0 ? void 0 : _weatherImages$cloudy.few) || fewclouds;\n          case 'scattered clouds':\n            return ((_weatherImages$cloudy2 = weatherImages.cloudy) === null || _weatherImages$cloudy2 === void 0 ? void 0 : _weatherImages$cloudy2.scattered) || scatteredclouds;\n          case 'broken clouds':\n            return ((_weatherImages$cloudy3 = weatherImages.cloudy) === null || _weatherImages$cloudy3 === void 0 ? void 0 : _weatherImages$cloudy3.broken) || brokenclouds;\n          case 'overcast clouds':\n            return ((_weatherImages$cloudy4 = weatherImages.cloudy) === null || _weatherImages$cloudy4 === void 0 ? void 0 : _weatherImages$cloudy4.overcast) || overcastclouds;\n          default:\n            return cloudyday;\n        }\n      case 'rain':\n        const rainDescription = weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather$2 = weatherData.weather[0]) === null || _weatherData$weather$2 === void 0 ? void 0 : _weatherData$weather$2.description; // Get the description safely\n        switch (rainDescription === null || rainDescription === void 0 ? void 0 : rainDescription.toLowerCase().trim()) {\n          case 'light rain':\n            return weatherImages.rain.light || weatherImages.rain.default;\n          case 'moderate rain':\n            return weatherImages.rain.moderate || weatherImages.rain.default;\n          case 'heavy rain':\n            return weatherImages.rain.heavy || weatherImages.rain.default;\n          case 'very heavy rain':\n            return weatherImages.rain.veryHeavy || weatherImages.rain.default;\n          case 'extreme rain':\n            return weatherImages.rain.extreme || weatherImages.rain.default;\n          case 'freezing rain':\n            return weatherImages.rain.freezing || weatherImages.rain.default;\n          case 'shower rain':\n            return weatherImages.rain.shower || weatherImages.rain.default;\n          default:\n            return weatherImages.rain.default;\n        }\n      case 'snow':\n        const snowDescription = weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather$3 = weatherData.weather[0]) === null || _weatherData$weather$3 === void 0 ? void 0 : _weatherData$weather$3.description; // Get the description safely\n        switch (snowDescription === null || snowDescription === void 0 ? void 0 : snowDescription.toLowerCase().trim()) {\n          case 'light snow':\n            return weatherImages.snow.light || lightSnow;\n          case 'moderate snow':\n            return weatherImages.snow.moderate || snow;\n          case 'heavy snow':\n            return weatherImages.snow.heavy || heavySnow;\n          case 'sleet':\n            return weatherImages.snow.sleet || sleet;\n          default:\n            return snow;\n        }\n      case 'thunderstorm':\n        const thunderstormDescription = weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather$4 = weatherData.weather[0]) === null || _weatherData$weather$4 === void 0 ? void 0 : _weatherData$weather$4.description; // Get the description safely\n        switch (thunderstormDescription === null || thunderstormDescription === void 0 ? void 0 : thunderstormDescription.toLowerCase().trim()) {\n          case 'light rain':\n            return weatherImages.thunderstorm.lightRain || thunderstormLightRain;\n          case 'rain':\n            return weatherImages.thunderstorm.rain || thunderstormRain;\n          case 'heavy rain':\n            return weatherImages.thunderstorm.heavyRain || thunderstormHeavyRain;\n          case 'light snow':\n            return weatherImages.thunderstorm.lightSnow || thunderstormLightSnow;\n          case 'snow':\n            return weatherImages.thunderstorm.snow || thunderstormSnow;\n          default:\n            return thunderstorm;\n        }\n      case 'mist':\n        return weatherImages.mist || mist;\n      case 'fog':\n        return weatherImages.fog || fog;\n      case 'dust':\n        return weatherImages.dust || dust;\n      case 'sand':\n        return weatherImages.sand || sand;\n      case 'ash':\n        return weatherImages.ash || ash;\n      case 'squall':\n        return weatherImages.squall || squall;\n      case 'tornado':\n        return weatherImages.tornado || tornado;\n      case 'haze':\n        return weatherImages.haze || haze;\n      case 'drizzle':\n        return weatherImages.other.drizzle || lightRain;\n      case 'smoke':\n        return weatherImages.smoke || smoke;\n      default:\n        return clearsky;\n    }\n  };\n  const handleSearch = async e => {\n    if (e.key === 'Enter') {\n      await fetchWeather(inputCity); // Fetch weather and update cityOffset automatically\n      setCity(inputCity); // Update city state with the input\n    }\n  };\n  const useLiveLocationTime = offset => {\n    _s();\n    const [locationTime, setLocationTime] = useState('');\n    const updateLocationTime = () => {\n      const utcTime = new Date(); // Current UTC time\n      const localTime = new Date(utcTime.getTime() + offset * 1000); // Apply the offset in seconds\n\n      // Set the time display as GMT/UTC with offset applied\n      setLocationTime(localTime.toUTCString()); // Display in UTC format\n    };\n    useEffect(() => {\n      updateLocationTime(); // Initialize the time\n      const interval = setInterval(updateLocationTime, 1000); // Update every second\n      return () => clearInterval(interval); // Cleanup interval on unmount\n    }, [offset]); // Effect re-runs when offset changes\n\n    return locationTime;\n  };\n  _s(useLiveLocationTime, \"evWrANKZ5oVP+k2/Y4wO4hDCMEg=\");\n  const capitalizeFirstLetter = string => {\n    if (!string) return '';\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n  };\n  console.log(weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather$5 = weatherData.weather[0]) === null || _weatherData$weather$5 === void 0 ? void 0 : _weatherData$weather$5.main.toLowerCase());\n  const liveTime = useLiveLocationTime(cityOffset);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [renderRainAnimation(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SkyTrack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"status-text\",\n          children: \"STATUS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaExclamationCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weatherData ? `${weatherData.main.humidity}%` : '---'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaChartLine, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weatherData ? `Feels like ${Math.round(weatherData.main.feels_like)}°` : '---'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaTachometerAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weatherData ? `${weatherData.main.pressure} hPa` : '---'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaWind, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weatherData ? `${Math.round(weatherData.wind.speed)} m/s` : '---'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weatherData ? `${weatherData.visibility / 1000} km` : '---'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaCloud, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weatherData ? `${weatherData.clouds.all}%` : '---'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weatherData && weatherData.sys && weatherData.sys.sunrise ? `Sunrise: ${new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString()}` : 'Sunrise: ---'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weatherData && weatherData.sys && weatherData.sys.sunset ? `Sunset: ${new Date(weatherData.sys.sunset * 1000).toLocaleTimeString()}` : 'Sunset: ---'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [capitalizeFirstLetter(city), \" : \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: liveTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search city\",\n              value: inputCity,\n              onKeyDown: handleSearch,\n              onChange: e => setInputCity(e.target.value),\n              className: \"search-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"search-button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temperature\",\n              children: weatherData ? `${Math.round(weatherData.main.temp)}°` : '---'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp-range\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"temp-range-card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"high-temp\",\n                  children: weatherData ? `H: ${Math.round(weatherData.main.temp_max)}°` : '---'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"temp-range-card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"low-temp\",\n                  children: weatherData ? `L: ${Math.round(weatherData.main.temp_min)}°` : '---'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"condition\",\n            children: weatherData ? weatherData.weather[0].description : '---'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast\",\n          children: forecastData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `day ${index === 3 ? 'wednesday' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: new Date(day.date).toLocaleString('en-US', {\n                weekday: 'long'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [day.temp, \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: day.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recently-searched-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recently-searched\",\n            children: recentlySearched.map((location, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recently-searched-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: location.temp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: location.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"SZDtzvyH0BgEIOpZU2+GO5uYWX8=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FaExclamationCircle","FaChartLine","FaMapMarkerAlt","FaTachometerAlt","FaWind","FaEye","FaCloud","FaSun","FaMoon","eveningsky","nightsky","fewclouds","scatteredclouds","brokenclouds","overcastclouds","cloudyday","cloudynight","lightRain","moderateRain","heavyRain","veryHeavyRain","extremeRain","freezingRain","showerRain","defaultRain","lightSnow","snow","heavySnow","sleet","mist","fog","dust","sand","ash","squall","tornado","haze","smoke","thunderstormLightRain","thunderstormRain","thunderstormHeavyRain","thunderstormLightSnow","thunderstormSnow","thunderstorm","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","App","_s2","_s","$RefreshSig$","_weatherData$weather$5","city","setCity","inputCity","setInputCity","cityOffset","setCityOffset","weatherData","setWeatherData","units","setUnits","loading","setLoading","forecastData","setForecastData","searchOpen","setSearchOpen","recentlySearched","setRecentlySearched","name","temp","description","renderRainAnimation","weather","main","toLowerCase","includes","rainCondition","speedClass","generateRaindrops","layer","Array","from","length","map","_","index","randomDelay","Math","random","randomLeft","className","style","left","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","children","getTimeOfDay","offset","utcTime","Date","now","locationTime","hour","getHours","fetchWeather","lat","lon","weatherAPI","forecastAPI","weatherResponse","fetch","json","cod","timezoneOffset","timezone","timeOfDay","weatherCondition","backgroundImage","getWeatherImage","document","body","forecastResponse","list","dailyForecasts","reduce","acc","entry","date","dt","toLocaleDateString","round","high","temp_max","low","temp_min","Object","values","slice","updateRecentlySearched","console","error","message","cityName","currentWeather","newSearch","prev","updatedSearch","filter","item","fetchRecentCitiesWeather","updatedCities","Promise","all","location","response","data","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","weatherImages","clear","day","afternoon","afternoonsky","evening","night","cloudy","few","scattered","broken","overcast","rain","light","moderate","heavy","veryHeavy","extreme","freezing","shower","default","general","other","drizzle","_weatherData$weather$","_weatherImages$cloudy","_weatherImages$cloudy2","_weatherImages$cloudy3","_weatherImages$cloudy4","_weatherData$weather$2","_weatherData$weather$3","_weatherData$weather$4","trim","rainDescription","snowDescription","thunderstormDescription","clearsky","handleSearch","e","key","useLiveLocationTime","setLocationTime","updateLocationTime","localTime","getTime","toUTCString","interval","setInterval","clearInterval","capitalizeFirstLetter","string","charAt","toUpperCase","log","liveTime","id","humidity","feels_like","pressure","wind","speed","visibility","clouds","sys","sunrise","toLocaleTimeString","sunset","type","placeholder","value","onKeyDown","onChange","target","toLocaleString","weekday","_c","$RefreshReg$"],"sources":["/Users/mahijith/Documents/repos/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { FaExclamationCircle, FaChartLine, FaMapMarkerAlt, FaTachometerAlt, FaWind, FaEye, FaCloud, FaSun, FaMoon } from 'react-icons/fa';\n\n// Clear Weather\n\nimport eveningsky from 'https://github.com/user-attachments/assets/6e3bae4e-0ca6-4328-a089-81d50978f46d';\nimport nightsky from 'https://github.com/user-attachments/assets/6f711a38-2969-4eab-bc13-986d3872b76a';\n\n// Cloudy Weather\nimport fewclouds from 'https://github.com/user-attachments/assets/e42051f6-c3f4-4d34-b5d5-4f5e890a895c';\nimport scatteredclouds from 'https://github.com/user-attachments/assets/0e57c792-a251-4fa0-9a95-b7e9cf74b5df';\nimport brokenclouds from 'https://imgur.com/N6XPp0z';\nimport overcastclouds from 'https://github.com/user-attachments/assets/8962a9ad-462a-4cba-a983-bcbf298a72a0';\nimport cloudyday from 'https://github.com/user-attachments/assets/85d18a6d-858a-45bf-9974-d9153ad8ffc5';\nimport cloudynight from 'https://github.com/user-attachments/assets/f0f0d0cb-c17e-4b21-b6c7-c9cf70549717';\n\n// Rainy Weather\nimport lightRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport moderateRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport heavyRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport veryHeavyRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport extremeRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport freezingRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport showerRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\nimport defaultRain from 'https://github.com/user-attachments/assets/b8819c25-1446-4c6c-8f2a-415e5c2a8e1a';\n\n// Snowy Weather\nimport lightSnow from 'https://github.com/user-attachments/assets/07129571-dd05-46d6-890e-dc58223df36b';\nimport snow from 'https://github.com/user-attachments/assets/71cc8e66-dc2a-49fc-b885-db12d7e85bea';\nimport heavySnow from 'https://github.com/user-attachments/assets/818507f8-d87e-4d2e-863d-56db894fe6ef';\nimport sleet from 'https://github.com/user-attachments/assets/5e542324-23f7-471f-9c33-a68fb8d87d49';\n\n// Other Weather Conditions\nimport mist from 'https://github.com/user-attachments/assets/1eb7de01-776f-47ee-a6ec-a6e98f760633';\nimport fog from 'https://github.com/user-attachments/assets/10c98ff2-2d66-44b3-9a3f-6228acca3d80';\nimport dust from 'https://github.com/user-attachments/assets/c1baf36e-a4d8-4270-9108-2e0ce051becb';\nimport sand from 'https://github.com/user-attachments/assets/2467f0b1-7085-425b-be2b-5c3ee7a1e823';\nimport ash from 'https://imgur.com/KUSLKof';\nimport squall from 'https://github.com/user-attachments/assets/bd83c036-099f-4e07-89bf-a54694bf47c3';\nimport tornado from 'https://github.com/user-attachments/assets/1252c7ad-cf0f-4c5b-979c-5fb1d5bd7228';\nimport haze from 'https://github.com/user-attachments/assets/33d52033-8958-4c99-b2a4-d25e83b82476';\nimport smoke from 'https://github.com/user-attachments/assets/bfb2eac9-376b-4e11-abcb-fbd81c369557';\n\n// Thunderstorm Weather\nimport thunderstormLightRain from 'https://github.com/user-attachments/assets/7b296170-2045-429a-a8d2-4923cf43ebcd';\nimport thunderstormRain from 'https://github.com/user-attachments/assets/e30eb39a-b85f-4228-aa25-928a1371760a';\nimport thunderstormHeavyRain from 'https://github.com/user-attachments/assets/60eb04a2-f5ef-47a5-ae5b-c5f7d016b600';\nimport thunderstormLightSnow from 'https://github.com/user-attachments/assets/f9aefb0c-8763-419c-ae60-5e32161969c6';\nimport thunderstormSnow from 'https://github.com/user-attachments/assets/570c0b65-4d28-4815-a8a9-d22fc539900a';\nimport thunderstorm from 'https://github.com/user-attachments/assets/5f854f05-5f98-4994-9fbe-d880c0fbda95';\n\n\nconst API_KEY = '82c64fe267e32fca1a228e088faf5033';\n\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [inputCity, setInputCity] = useState('');\n  const [cityOffset, setCityOffset] = useState(0);\n  const [weatherData, setWeatherData] = useState(null);\n  const [units, setUnits] = useState('metric');\n  const [loading, setLoading] = useState(true);\n  const [forecastData, setForecastData] = useState([]);\n  const [searchOpen, setSearchOpen] = useState(false);\n  const [recentlySearched, setRecentlySearched] = useState([\n    { name: 'Delhi, India', temp: '', description: '' },\n    { name: 'New York, USA', temp: '', description: '' },\n  ]);\n  \nconst renderRainAnimation = () => {\n    if (weatherData && weatherData.weather[0].main.toLowerCase().includes('rain')) {\n        const rainCondition = weatherData.weather[0].description.toLowerCase();\n        let speedClass = '';\n\n        if (rainCondition.includes('light')) {\n            speedClass = 'light-rain';\n        } else if (rainCondition.includes('moderate')) {\n            speedClass = 'moderate-rain';\n        } else if (rainCondition.includes('heavy')) {\n            speedClass = 'heavy-rain';\n        }\n\n        const generateRaindrops = (layer) => {\n            return Array.from({ length: 100 }).map((_, index) => {\n                const randomDelay = Math.random() * 2;\n                const randomLeft = Math.random() * 100;\n\n                return (\n                    <div \n                        key={`${layer}-${index}`} \n                        className=\"raindrop\" \n                        style={{ \n                            left: `${randomLeft}vw`,\n                            animationDelay: `${randomDelay}s`,\n                        }} \n                    />\n                );\n            });\n        };\n\n        return (\n            <div className={`rain-container ${speedClass}`}>\n                {/* Layer 1 */}\n                <div className=\"rain-layer\">\n                    {generateRaindrops(1)}\n                </div>\n                <div className=\"rain-layer\">\n                    {generateRaindrops(2)}\n                </div>\n            </div>\n        );\n    }\n    return null;\n}; \n\nconst getTimeOfDay = (offset) => {\n  const utcTime = Date.now();\n  const locationTime = new Date(utcTime + offset * 1000); // Apply the timezone offset\n  const hour = locationTime.getHours(); // Get the hour in local time\n\n  if (hour >= 5 && hour < 12) {\n      return 'day';\n  } else if (hour >= 12 && hour < 17) {\n      return 'afternoon';\n  } else if (hour >= 17 && hour < 21) {\n      return 'evening';\n  } else {\n      return 'night';\n  }\n};\n\nconst fetchWeather = async (city, lat, lon) => {\n  let weatherAPI, forecastAPI;\n\n  if (city) {\n    weatherAPI = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`;\n    forecastAPI = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`;\n  } else if (lat && lon) {\n    weatherAPI = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n    forecastAPI = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n  }\n\n  try {\n    setLoading(true);\n\n    // Fetch current weather data\n    const weatherResponse = await fetch(weatherAPI);\n    const weatherData = await weatherResponse.json();\n\n    if (weatherData.cod === 200) {\n      setWeatherData(weatherData);\n\n      const timezoneOffset = weatherData.timezone; // Extract timezone offset in seconds\n      setCityOffset(timezoneOffset); // Update the offset for live location time\n\n      const timeOfDay = getTimeOfDay(timezoneOffset); // Pass the timezone offset here\n      const weatherCondition = weatherData.weather[0].main.toLowerCase();\n      const backgroundImage = getWeatherImage(weatherCondition, timeOfDay);\n      document.body.style.backgroundImage = `url(${backgroundImage})`;\n\n      // Fetch forecast data\n      const forecastResponse = await fetch(forecastAPI);\n      const forecastData = await forecastResponse.json();\n\n      if (forecastData.cod === '200' && forecastData.list && forecastData.list.length > 0) {\n        const dailyForecasts = forecastData.list.reduce((acc, entry) => {\n          const date = new Date(entry.dt * 1000).toLocaleDateString();\n          if (!acc[date]) {\n            acc[date] = {\n              temp: Math.round(entry.main.temp),\n              description: entry.weather[0].description,\n              high: Math.round(entry.main.temp_max),\n              low: Math.round(entry.main.temp_min),\n              date: date,\n            };\n          }\n          return acc;\n        }, {});\n\n        setForecastData(Object.values(dailyForecasts).slice(0, 5));\n        setCity(city || forecastData.city.name);\n        await updateRecentlySearched(city || forecastData.city.name, weatherData);\n      } else {\n        console.error('Error fetching forecast data:', forecastData.message);\n      }\n    } else {\n      console.error('Error fetching current weather data:', weatherData.message);\n      setWeatherData(null);\n    }\n\n    setLoading(false);\n  } catch (error) {\n    console.error('Fetch error:', error);\n    setLoading(false);\n  }\n};\n\nconst updateRecentlySearched = async (cityName, currentWeather) => {\n    const newSearch = {\n      name: cityName,\n      temp: `${Math.round(currentWeather.main.temp)}°`,\n      description: currentWeather.weather[0].description,\n    };\n\n    setRecentlySearched(prev => {\n      const updatedSearch = [newSearch, ...prev.filter(item => item.name !== newSearch.name)].slice(0, 2);\n      return updatedSearch;\n    });\n};\n\nconst fetchRecentCitiesWeather = async () => {\n    try {\n      const updatedCities = await Promise.all(\n        recentlySearched.map(async (location) => {\n          const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location.name}&appid=${API_KEY}&units=metric`);\n          const data = await response.json();\n          if (data.cod === 200) {\n            return {\n              name: location.name,\n              temp: `${Math.round(data.main.temp)}°`,\n              description: data.weather[0].description,\n            };\n          } else {\n            console.error(`Error fetching data for ${location.name}: ${data.message}`);\n            return location; // Keep the initial city name if fetch fails\n          }\n        })\n      );\n      setRecentlySearched(updatedCities);\n    } catch (error) {\n      console.error(\"Error fetching recent cities' weather data:\", error);\n    }\n};\n\nuseEffect(() => {\n    // Get user's location and fetch weather\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        fetchWeather('', latitude, longitude); \n      },\n    );\n}, [units]); \n\nuseEffect(() => {\n    fetchRecentCitiesWeather(); \n}, []); \n\nconst weatherImages = {\n        clear: {\n          day: 'https://i.imgur.com/IUk42lM.png',\n          afternoon: afternoonsky,\n          evening: eveningsky,\n          night: nightsky,\n        },\n        cloudy: {\n            few: fewclouds,\n            scattered: scatteredclouds,\n            broken: brokenclouds,\n            overcast: overcastclouds,\n        },\n        rain: {\n          light: lightRain,\n          moderate: moderateRain,\n          heavy: heavyRain,\n          veryHeavy: veryHeavyRain,\n          extreme: extremeRain,\n          freezing: freezingRain,\n          shower: showerRain,\n          default: defaultRain,\n        },\n        snow: {\n            light: lightSnow,\n            moderate: snow,\n            heavy: heavySnow,\n            sleet: sleet,\n        },\n        mist: mist,\n        fog: fog,\n        dust: dust,\n        sand: sand,\n        ash: ash,\n        squall: squall,\n        tornado: tornado,\n        haze: haze,\n        thunderstorm: {\n            lightRain: thunderstormLightRain,\n            rain: thunderstormRain,\n            heavyRain: thunderstormHeavyRain,\n            lightSnow: thunderstormLightSnow,\n            snow: thunderstormSnow,\n            general: thunderstorm,\n        },\n        other: {\n            drizzle: lightRain,\n        },\n};\n\nconst getWeatherImage = (weatherCondition, description) => {\n      const timeOfDay = getTimeOfDay(); // Get the current time of day\n  \n      switch (weatherCondition.toLowerCase()) {\n        case 'clear':\n            return weatherImages.clear[timeOfDay] || weatherImages.clear.day;\n  \n          case 'clouds':\n            const description = weatherData?.weather[0]?.description; // Get the description safely\n            switch (description?.toLowerCase().trim()) { // Adding trim to remove any extra spaces\n                case 'few clouds':\n                    return weatherImages.cloudy?.few || fewclouds;\n                case 'scattered clouds':\n                    return weatherImages.cloudy?.scattered || scatteredclouds;\n                case 'broken clouds':\n                    return weatherImages.cloudy?.broken || brokenclouds;\n                case 'overcast clouds':\n                    return weatherImages.cloudy?.overcast || overcastclouds;\n                default:\n                    return cloudyday;\n            }\n        \n          case 'rain':\n            const rainDescription = weatherData?.weather[0]?.description; // Get the description safely\n            switch (rainDescription?.toLowerCase().trim()) { \n                case 'light rain':\n                    return weatherImages.rain.light || weatherImages.rain.default;\n                case 'moderate rain':\n                    return weatherImages.rain.moderate || weatherImages.rain.default;\n                case 'heavy rain':\n                    return weatherImages.rain.heavy || weatherImages.rain.default;\n                case 'very heavy rain':\n                    return weatherImages.rain.veryHeavy || weatherImages.rain.default;\n                case 'extreme rain':\n                    return weatherImages.rain.extreme || weatherImages.rain.default;\n                case 'freezing rain':\n                    return weatherImages.rain.freezing || weatherImages.rain.default;\n                case 'shower rain':\n                    return weatherImages.rain.shower || weatherImages.rain.default;\n                default:\n                    return weatherImages.rain.default;\n            }\n          \n        case 'snow':\n            const snowDescription = weatherData?.weather[0]?.description; // Get the description safely\n            switch (snowDescription?.toLowerCase().trim()) {\n                case 'light snow':\n                    return weatherImages.snow.light || lightSnow;\n                case 'moderate snow':\n                    return weatherImages.snow.moderate || snow;\n                case 'heavy snow':\n                    return weatherImages.snow.heavy || heavySnow;\n                case 'sleet':\n                    return weatherImages.snow.sleet || sleet;\n                default:\n                    return snow;\n            }\n        \n        case 'thunderstorm':\n            const thunderstormDescription = weatherData?.weather[0]?.description; // Get the description safely\n            switch (thunderstormDescription?.toLowerCase().trim()) {\n                case 'light rain':\n                    return weatherImages.thunderstorm.lightRain || thunderstormLightRain;\n                case 'rain':\n                    return weatherImages.thunderstorm.rain || thunderstormRain;\n                case 'heavy rain':\n                    return weatherImages.thunderstorm.heavyRain || thunderstormHeavyRain;\n                case 'light snow':\n                    return weatherImages.thunderstorm.lightSnow || thunderstormLightSnow;\n                case 'snow':\n                    return weatherImages.thunderstorm.snow || thunderstormSnow;\n                default:\n                    return thunderstorm;\n            }\n            \n  \n          case 'mist':\n              return weatherImages.mist || mist;\n  \n          case 'fog':\n              return weatherImages.fog || fog;\n  \n          case 'dust':\n              return weatherImages.dust || dust;\n  \n          case 'sand':\n              return weatherImages.sand || sand;\n  \n          case 'ash':\n              return weatherImages.ash || ash;\n  \n          case 'squall':\n              return weatherImages.squall || squall;\n  \n          case 'tornado':\n              return weatherImages.tornado || tornado;\n\n          case 'haze':\n              return weatherImages.haze || haze;\n  \n          case 'drizzle':\n              return weatherImages.other.drizzle || lightRain;\n\n          case 'smoke':\n          return weatherImages.smoke || smoke;\n  \n          default:\n              return clearsky;\n      }\n};\n  \nconst handleSearch = async (e) => {\n  if (e.key === 'Enter') {\n    await fetchWeather(inputCity); // Fetch weather and update cityOffset automatically\n    setCity(inputCity); // Update city state with the input\n  }\n};\n\nconst useLiveLocationTime = (offset) => {\n  const [locationTime, setLocationTime] = useState('');\n\n  const updateLocationTime = () => {\n    const utcTime = new Date(); // Current UTC time\n    const localTime = new Date(utcTime.getTime() + offset * 1000); // Apply the offset in seconds\n\n    // Set the time display as GMT/UTC with offset applied\n    setLocationTime(localTime.toUTCString()); // Display in UTC format\n  };\n\n  useEffect(() => {\n    updateLocationTime(); // Initialize the time\n    const interval = setInterval(updateLocationTime, 1000); // Update every second\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [offset]); // Effect re-runs when offset changes\n\n  return locationTime;\n};\n\nconst capitalizeFirstLetter = (string) => {\n  if (!string) return '';\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n};\n\n\n  console.log(weatherData?.weather[0]?.main.toLowerCase());\n\n\n  const liveTime = useLiveLocationTime(cityOffset);\n\n  return (\n    <div className=\"container\">\n      {renderRainAnimation()}\n      <div className=\"sidebar\">\n        <h1>SkyTrack</h1>\n        <div className=\"status\">\n          <span id=\"status-text\">STATUS</span>\n          <div className=\"details\">\n            <span className=\"icon\">\n              <FaExclamationCircle />\n            </span>\n            <span>{weatherData ? `${weatherData.main.humidity}%` : '---'}</span>\n          </div>\n          <div className=\"details\">\n            <span className=\"icon\">\n              <FaChartLine />\n            </span>\n            <span>{weatherData ? `Feels like ${Math.round(weatherData.main.feels_like)}°` : '---'}</span>\n          </div>\n          <div className=\"details\">\n            <span className=\"icon\">\n              <FaTachometerAlt />\n            </span>\n            <span>{weatherData ? `${weatherData.main.pressure} hPa` : '---'}</span>\n          </div>\n          <div className=\"details\">\n            <span className=\"icon\">\n              <FaWind />\n            </span>\n            <span>{weatherData ? `${Math.round(weatherData.wind.speed)} m/s` : '---'}</span>\n          </div>\n          <div className=\"details\">\n            <span className=\"icon\">\n              <FaEye />\n            </span>\n            <span>{weatherData ? `${weatherData.visibility / 1000} km` : '---'}</span>\n          </div>\n          <div className=\"details\">\n            <span className=\"icon\">\n              <FaCloud />\n            </span>\n            <span>{weatherData ? `${weatherData.clouds.all}%` : '---'}</span>\n          </div>\n          <div className=\"details\">\n            <span className=\"icon\">\n              <FaSun />\n            </span>\n            <span>\n              {weatherData && weatherData.sys && weatherData.sys.sunrise\n                ? `Sunrise: ${new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString()}`\n                : 'Sunrise: ---'}\n            </span>\n          </div>\n          <div className=\"details\">\n            <span className=\"icon\">\n              <FaMoon />\n            </span>\n            <span>\n              {weatherData && weatherData.sys && weatherData.sys.sunset\n                ? `Sunset: ${new Date(weatherData.sys.sunset * 1000).toLocaleTimeString()}`\n                : 'Sunset: ---'}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"main-content\">\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <>\n            <div className=\"header\">\n              <div className=\"header\">\n              <div className=\"location\">\n                  <span>{capitalizeFirstLetter(city)} : </span>\n                  <span>{liveTime}</span>\n              </div>\n              </div>\n              <div className=\"actions\">\n                <input \n                  type=\"text\" \n                  placeholder=\"Search city\" \n                  value={inputCity} \n                  onKeyDown={handleSearch} \n                  onChange={(e) => setInputCity(e.target.value)} \n                  className=\"search-input\" \n                />\n                <button className=\"search-button\">\n                </button>\n              </div>\n            </div>\n            <div className=\"weather-info\">\n              <div className=\"temperature-container\">\n                <p className=\"temperature\">\n                  {weatherData ? `${Math.round(weatherData.main.temp)}°` : '---'}\n                </p>\n                <div className=\"temp-range\">\n                  <div className=\"temp-range-card\">\n                    <div className=\"high-temp\">\n                      {weatherData ? `H: ${Math.round(weatherData.main.temp_max)}°` : '---'}\n                    </div>\n                  </div>\n                  <div className=\"temp-range-card\">\n                    <div className=\"low-temp\">\n                      {weatherData ? `L: ${Math.round(weatherData.main.temp_min)}°` : '---'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <p className=\"condition\">{weatherData ? weatherData.weather[0].description : '---'}</p>\n            </div>\n\n\n\n            <div className=\"forecast\">\n              {forecastData.map((day, index) => (\n                <div key={index} className={`day ${index === 3 ? 'wednesday' : ''}`}>\n                  <h2>{new Date(day.date).toLocaleString('en-US', { weekday: 'long' })}</h2>\n                  <p>{day.temp}°</p>\n                  <p>{day.description}</p> \n                </div>\n              ))}\n            </div>\n\n            <div className=\"recently-searched-container\">\n              <div className=\"recently-searched\">\n                {recentlySearched.map((location, index) => (\n                  <div key={index} className=\"recently-searched-card\">\n                    <span>{location.name}</span>\n                    <span>{location.temp}</span>\n                    <span>{location.description}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,mBAAmB,EAAEC,WAAW,EAAEC,cAAc,EAAEC,eAAe,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,QAAQ,gBAAgB;;AAEzI;;AAEA,OAAOC,UAAU,MAAM,iFAAiF;AACxG,OAAOC,QAAQ,MAAM,iFAAiF;;AAEtG;AACA,OAAOC,SAAS,MAAM,iFAAiF;AACvG,OAAOC,eAAe,MAAM,iFAAiF;AAC7G,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,iFAAiF;AAC5G,OAAOC,SAAS,MAAM,iFAAiF;AACvG,OAAOC,WAAW,MAAM,iFAAiF;;AAEzG;AACA,OAAOC,SAAS,MAAM,iFAAiF;AACvG,OAAOC,YAAY,MAAM,iFAAiF;AAC1G,OAAOC,SAAS,MAAM,iFAAiF;AACvG,OAAOC,aAAa,MAAM,iFAAiF;AAC3G,OAAOC,WAAW,MAAM,iFAAiF;AACzG,OAAOC,YAAY,MAAM,iFAAiF;AAC1G,OAAOC,UAAU,MAAM,iFAAiF;AACxG,OAAOC,WAAW,MAAM,iFAAiF;;AAEzG;AACA,OAAOC,SAAS,MAAM,iFAAiF;AACvG,OAAOC,IAAI,MAAM,iFAAiF;AAClG,OAAOC,SAAS,MAAM,iFAAiF;AACvG,OAAOC,KAAK,MAAM,iFAAiF;;AAEnG;AACA,OAAOC,IAAI,MAAM,iFAAiF;AAClG,OAAOC,GAAG,MAAM,iFAAiF;AACjG,OAAOC,IAAI,MAAM,iFAAiF;AAClG,OAAOC,IAAI,MAAM,iFAAiF;AAClG,OAAOC,GAAG,MAAM,2BAA2B;AAC3C,OAAOC,MAAM,MAAM,iFAAiF;AACpG,OAAOC,OAAO,MAAM,iFAAiF;AACrG,OAAOC,IAAI,MAAM,iFAAiF;AAClG,OAAOC,KAAK,MAAM,iFAAiF;;AAEnG;AACA,OAAOC,qBAAqB,MAAM,iFAAiF;AACnH,OAAOC,gBAAgB,MAAM,iFAAiF;AAC9G,OAAOC,qBAAqB,MAAM,iFAAiF;AACnH,OAAOC,qBAAqB,MAAM,iFAAiF;AACnH,OAAOC,gBAAgB,MAAM,iFAAiF;AAC9G,OAAOC,YAAY,MAAM,iFAAiF;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3G,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,sBAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC0D,SAAS,EAAEC,YAAY,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC4D,UAAU,EAAEC,aAAa,CAAC,GAAG7D,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC8D,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgE,KAAK,EAAEC,QAAQ,CAAC,GAAGjE,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACkE,OAAO,EAAEC,UAAU,CAAC,GAAGnE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoE,YAAY,EAAEC,eAAe,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsE,UAAU,EAAEC,aAAa,CAAC,GAAGvE,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACwE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzE,QAAQ,CAAC,CACvD;IAAE0E,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,EACnD;IAAEF,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CACrD,CAAC;EAEJ,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,IAAIf,WAAW,IAAIA,WAAW,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC3E,MAAMC,aAAa,GAAGpB,WAAW,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACF,WAAW,CAACI,WAAW,CAAC,CAAC;MACtE,IAAIG,UAAU,GAAG,EAAE;MAEnB,IAAID,aAAa,CAACD,QAAQ,CAAC,OAAO,CAAC,EAAE;QACjCE,UAAU,GAAG,YAAY;MAC7B,CAAC,MAAM,IAAID,aAAa,CAACD,QAAQ,CAAC,UAAU,CAAC,EAAE;QAC3CE,UAAU,GAAG,eAAe;MAChC,CAAC,MAAM,IAAID,aAAa,CAACD,QAAQ,CAAC,OAAO,CAAC,EAAE;QACxCE,UAAU,GAAG,YAAY;MAC7B;MAEA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;QACjC,OAAOC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;UACjD,MAAMC,WAAW,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC;UACrC,MAAMC,UAAU,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;UAEtC,oBACI/C,OAAA;YAEIiD,SAAS,EAAC,UAAU;YACpBC,KAAK,EAAE;cACHC,IAAI,EAAE,GAAGH,UAAU,IAAI;cACvBI,cAAc,EAAE,GAAGP,WAAW;YAClC;UAAE,GALG,GAAGP,KAAK,IAAIM,KAAK,EAAE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAM3B,CAAC;QAEV,CAAC,CAAC;MACN,CAAC;MAED,oBACIxD,OAAA;QAAKiD,SAAS,EAAE,kBAAkBb,UAAU,EAAG;QAAAqB,QAAA,gBAE3CzD,OAAA;UAAKiD,SAAS,EAAC,YAAY;UAAAQ,QAAA,EACtBpB,iBAAiB,CAAC,CAAC;QAAC;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,YAAY;UAAAQ,QAAA,EACtBpB,iBAAiB,CAAC,CAAC;QAAC;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAEd;IACA,OAAO,IAAI;EACf,CAAC;EAED,MAAME,YAAY,GAAIC,MAAM,IAAK;IAC/B,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC1B,MAAMC,YAAY,GAAG,IAAIF,IAAI,CAACD,OAAO,GAAGD,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IACxD,MAAMK,IAAI,GAAGD,YAAY,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEtC,IAAID,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG,EAAE,EAAE;MACxB,OAAO,KAAK;IAChB,CAAC,MAAM,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MAChC,OAAO,WAAW;IACtB,CAAC,MAAM,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MAChC,OAAO,SAAS;IACpB,CAAC,MAAM;MACH,OAAO,OAAO;IAClB;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAOzD,IAAI,EAAE0D,GAAG,EAAEC,GAAG,KAAK;IAC7C,IAAIC,UAAU,EAAEC,WAAW;IAE3B,IAAI7D,IAAI,EAAE;MACR4D,UAAU,GAAG,qDAAqD5D,IAAI,UAAUN,OAAO,eAAe;MACtGmE,WAAW,GAAG,sDAAsD7D,IAAI,UAAUN,OAAO,eAAe;IAC1G,CAAC,MAAM,IAAIgE,GAAG,IAAIC,GAAG,EAAE;MACrBC,UAAU,GAAG,uDAAuDF,GAAG,QAAQC,GAAG,UAAUjE,OAAO,eAAe;MAClHmE,WAAW,GAAG,wDAAwDH,GAAG,QAAQC,GAAG,UAAUjE,OAAO,eAAe;IACtH;IAEA,IAAI;MACFiB,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMmD,eAAe,GAAG,MAAMC,KAAK,CAACH,UAAU,CAAC;MAC/C,MAAMtD,WAAW,GAAG,MAAMwD,eAAe,CAACE,IAAI,CAAC,CAAC;MAEhD,IAAI1D,WAAW,CAAC2D,GAAG,KAAK,GAAG,EAAE;QAC3B1D,cAAc,CAACD,WAAW,CAAC;QAE3B,MAAM4D,cAAc,GAAG5D,WAAW,CAAC6D,QAAQ,CAAC,CAAC;QAC7C9D,aAAa,CAAC6D,cAAc,CAAC,CAAC,CAAC;;QAE/B,MAAME,SAAS,GAAGnB,YAAY,CAACiB,cAAc,CAAC,CAAC,CAAC;QAChD,MAAMG,gBAAgB,GAAG/D,WAAW,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC;QAClE,MAAM8C,eAAe,GAAGC,eAAe,CAACF,gBAAgB,EAAED,SAAS,CAAC;QACpEI,QAAQ,CAACC,IAAI,CAAChC,KAAK,CAAC6B,eAAe,GAAG,OAAOA,eAAe,GAAG;;QAE/D;QACA,MAAMI,gBAAgB,GAAG,MAAMX,KAAK,CAACF,WAAW,CAAC;QACjD,MAAMjD,YAAY,GAAG,MAAM8D,gBAAgB,CAACV,IAAI,CAAC,CAAC;QAElD,IAAIpD,YAAY,CAACqD,GAAG,KAAK,KAAK,IAAIrD,YAAY,CAAC+D,IAAI,IAAI/D,YAAY,CAAC+D,IAAI,CAAC3C,MAAM,GAAG,CAAC,EAAE;UACnF,MAAM4C,cAAc,GAAGhE,YAAY,CAAC+D,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;YAC9D,MAAMC,IAAI,GAAG,IAAI5B,IAAI,CAAC2B,KAAK,CAACE,EAAE,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;YAC3D,IAAI,CAACJ,GAAG,CAACE,IAAI,CAAC,EAAE;cACdF,GAAG,CAACE,IAAI,CAAC,GAAG;gBACV7D,IAAI,EAAEkB,IAAI,CAAC8C,KAAK,CAACJ,KAAK,CAACxD,IAAI,CAACJ,IAAI,CAAC;gBACjCC,WAAW,EAAE2D,KAAK,CAACzD,OAAO,CAAC,CAAC,CAAC,CAACF,WAAW;gBACzCgE,IAAI,EAAE/C,IAAI,CAAC8C,KAAK,CAACJ,KAAK,CAACxD,IAAI,CAAC8D,QAAQ,CAAC;gBACrCC,GAAG,EAAEjD,IAAI,CAAC8C,KAAK,CAACJ,KAAK,CAACxD,IAAI,CAACgE,QAAQ,CAAC;gBACpCP,IAAI,EAAEA;cACR,CAAC;YACH;YACA,OAAOF,GAAG;UACZ,CAAC,EAAE,CAAC,CAAC,CAAC;UAENjE,eAAe,CAAC2E,MAAM,CAACC,MAAM,CAACb,cAAc,CAAC,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC1DzF,OAAO,CAACD,IAAI,IAAIY,YAAY,CAACZ,IAAI,CAACkB,IAAI,CAAC;UACvC,MAAMyE,sBAAsB,CAAC3F,IAAI,IAAIY,YAAY,CAACZ,IAAI,CAACkB,IAAI,EAAEZ,WAAW,CAAC;QAC3E,CAAC,MAAM;UACLsF,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEjF,YAAY,CAACkF,OAAO,CAAC;QACtE;MACF,CAAC,MAAM;QACLF,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEvF,WAAW,CAACwF,OAAO,CAAC;QAC1EvF,cAAc,CAAC,IAAI,CAAC;MACtB;MAEAI,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOkF,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpClF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMgF,sBAAsB,GAAG,MAAAA,CAAOI,QAAQ,EAAEC,cAAc,KAAK;IAC/D,MAAMC,SAAS,GAAG;MAChB/E,IAAI,EAAE6E,QAAQ;MACd5E,IAAI,EAAE,GAAGkB,IAAI,CAAC8C,KAAK,CAACa,cAAc,CAACzE,IAAI,CAACJ,IAAI,CAAC,GAAG;MAChDC,WAAW,EAAE4E,cAAc,CAAC1E,OAAO,CAAC,CAAC,CAAC,CAACF;IACzC,CAAC;IAEDH,mBAAmB,CAACiF,IAAI,IAAI;MAC1B,MAAMC,aAAa,GAAG,CAACF,SAAS,EAAE,GAAGC,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACnF,IAAI,KAAK+E,SAAS,CAAC/E,IAAI,CAAC,CAAC,CAACwE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACnG,OAAOS,aAAa;IACtB,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CACrCzF,gBAAgB,CAACiB,GAAG,CAAC,MAAOyE,QAAQ,IAAK;QACvC,MAAMC,QAAQ,GAAG,MAAM5C,KAAK,CAAC,qDAAqD2C,QAAQ,CAACxF,IAAI,UAAUxB,OAAO,eAAe,CAAC;QAChI,MAAMkH,IAAI,GAAG,MAAMD,QAAQ,CAAC3C,IAAI,CAAC,CAAC;QAClC,IAAI4C,IAAI,CAAC3C,GAAG,KAAK,GAAG,EAAE;UACpB,OAAO;YACL/C,IAAI,EAAEwF,QAAQ,CAACxF,IAAI;YACnBC,IAAI,EAAE,GAAGkB,IAAI,CAAC8C,KAAK,CAACyB,IAAI,CAACrF,IAAI,CAACJ,IAAI,CAAC,GAAG;YACtCC,WAAW,EAAEwF,IAAI,CAACtF,OAAO,CAAC,CAAC,CAAC,CAACF;UAC/B,CAAC;QACH,CAAC,MAAM;UACLwE,OAAO,CAACC,KAAK,CAAC,2BAA2Ba,QAAQ,CAACxF,IAAI,KAAK0F,IAAI,CAACd,OAAO,EAAE,CAAC;UAC1E,OAAOY,QAAQ,CAAC,CAAC;QACnB;MACF,CAAC,CACH,CAAC;MACDzF,mBAAmB,CAACsF,aAAa,CAAC;IACpC,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACrE;EACJ,CAAC;EAEDpJ,SAAS,CAAC,MAAM;IACZ;IACAoK,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;MACZ,MAAM;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;MAC/C1D,YAAY,CAAC,EAAE,EAAEwD,QAAQ,EAAEC,SAAS,CAAC;IACvC,CACF,CAAC;EACL,CAAC,EAAE,CAAC1G,KAAK,CAAC,CAAC;EAEX/D,SAAS,CAAC,MAAM;IACZ6J,wBAAwB,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,aAAa,GAAG;IACdC,KAAK,EAAE;MACLC,GAAG,EAAE,iCAAiC;MACtCC,SAAS,EAAEC,YAAY;MACvBC,OAAO,EAAEtK,UAAU;MACnBuK,KAAK,EAAEtK;IACT,CAAC;IACDuK,MAAM,EAAE;MACJC,GAAG,EAAEvK,SAAS;MACdwK,SAAS,EAAEvK,eAAe;MAC1BwK,MAAM,EAAEvK,YAAY;MACpBwK,QAAQ,EAAEvK;IACd,CAAC;IACDwK,IAAI,EAAE;MACJC,KAAK,EAAEtK,SAAS;MAChBuK,QAAQ,EAAEtK,YAAY;MACtBuK,KAAK,EAAEtK,SAAS;MAChBuK,SAAS,EAAEtK,aAAa;MACxBuK,OAAO,EAAEtK,WAAW;MACpBuK,QAAQ,EAAEtK,YAAY;MACtBuK,MAAM,EAAEtK,UAAU;MAClBuK,OAAO,EAAEtK;IACX,CAAC;IACDE,IAAI,EAAE;MACF6J,KAAK,EAAE9J,SAAS;MAChB+J,QAAQ,EAAE9J,IAAI;MACd+J,KAAK,EAAE9J,SAAS;MAChBC,KAAK,EAAEA;IACX,CAAC;IACDC,IAAI,EAAEA,IAAI;IACVC,GAAG,EAAEA,GAAG;IACRC,IAAI,EAAEA,IAAI;IACVC,IAAI,EAAEA,IAAI;IACVC,GAAG,EAAEA,GAAG;IACRC,MAAM,EAAEA,MAAM;IACdC,OAAO,EAAEA,OAAO;IAChBC,IAAI,EAAEA,IAAI;IACVO,YAAY,EAAE;MACV1B,SAAS,EAAEqB,qBAAqB;MAChCgJ,IAAI,EAAE/I,gBAAgB;MACtBpB,SAAS,EAAEqB,qBAAqB;MAChCf,SAAS,EAAEgB,qBAAqB;MAChCf,IAAI,EAAEgB,gBAAgB;MACtBqJ,OAAO,EAAEpJ;IACb,CAAC;IACDqJ,KAAK,EAAE;MACHC,OAAO,EAAEhL;IACb;EACR,CAAC;EAED,MAAM4G,eAAe,GAAGA,CAACF,gBAAgB,EAAEjD,WAAW,KAAK;IAAA,IAAAwH,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IACrD,MAAM/E,SAAS,GAAGnB,YAAY,CAAC,CAAC,CAAC,CAAC;;IAElC,QAAQoB,gBAAgB,CAAC7C,WAAW,CAAC,CAAC;MACpC,KAAK,OAAO;QACR,OAAO4F,aAAa,CAACC,KAAK,CAACjD,SAAS,CAAC,IAAIgD,aAAa,CAACC,KAAK,CAACC,GAAG;MAElE,KAAK,QAAQ;QACX,MAAMlG,WAAW,GAAGd,WAAW,aAAXA,WAAW,wBAAAsI,qBAAA,GAAXtI,WAAW,CAAEgB,OAAO,CAAC,CAAC,CAAC,cAAAsH,qBAAA,uBAAvBA,qBAAA,CAAyBxH,WAAW,CAAC,CAAC;QAC1D,QAAQA,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,WAAW,CAAC,CAAC,CAAC4H,IAAI,CAAC,CAAC;UAAI;UACzC,KAAK,YAAY;YACb,OAAO,EAAAP,qBAAA,GAAAzB,aAAa,CAACO,MAAM,cAAAkB,qBAAA,uBAApBA,qBAAA,CAAsBjB,GAAG,KAAIvK,SAAS;UACjD,KAAK,kBAAkB;YACnB,OAAO,EAAAyL,sBAAA,GAAA1B,aAAa,CAACO,MAAM,cAAAmB,sBAAA,uBAApBA,sBAAA,CAAsBjB,SAAS,KAAIvK,eAAe;UAC7D,KAAK,eAAe;YAChB,OAAO,EAAAyL,sBAAA,GAAA3B,aAAa,CAACO,MAAM,cAAAoB,sBAAA,uBAApBA,sBAAA,CAAsBjB,MAAM,KAAIvK,YAAY;UACvD,KAAK,iBAAiB;YAClB,OAAO,EAAAyL,sBAAA,GAAA5B,aAAa,CAACO,MAAM,cAAAqB,sBAAA,uBAApBA,sBAAA,CAAsBjB,QAAQ,KAAIvK,cAAc;UAC3D;YACI,OAAOC,SAAS;QACxB;MAEF,KAAK,MAAM;QACT,MAAM4L,eAAe,GAAG/I,WAAW,aAAXA,WAAW,wBAAA2I,sBAAA,GAAX3I,WAAW,CAAEgB,OAAO,CAAC,CAAC,CAAC,cAAA2H,sBAAA,uBAAvBA,sBAAA,CAAyB7H,WAAW,CAAC,CAAC;QAC9D,QAAQiI,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAE7H,WAAW,CAAC,CAAC,CAAC4H,IAAI,CAAC,CAAC;UACzC,KAAK,YAAY;YACb,OAAOhC,aAAa,CAACY,IAAI,CAACC,KAAK,IAAIb,aAAa,CAACY,IAAI,CAACQ,OAAO;UACjE,KAAK,eAAe;YAChB,OAAOpB,aAAa,CAACY,IAAI,CAACE,QAAQ,IAAId,aAAa,CAACY,IAAI,CAACQ,OAAO;UACpE,KAAK,YAAY;YACb,OAAOpB,aAAa,CAACY,IAAI,CAACG,KAAK,IAAIf,aAAa,CAACY,IAAI,CAACQ,OAAO;UACjE,KAAK,iBAAiB;YAClB,OAAOpB,aAAa,CAACY,IAAI,CAACI,SAAS,IAAIhB,aAAa,CAACY,IAAI,CAACQ,OAAO;UACrE,KAAK,cAAc;YACf,OAAOpB,aAAa,CAACY,IAAI,CAACK,OAAO,IAAIjB,aAAa,CAACY,IAAI,CAACQ,OAAO;UACnE,KAAK,eAAe;YAChB,OAAOpB,aAAa,CAACY,IAAI,CAACM,QAAQ,IAAIlB,aAAa,CAACY,IAAI,CAACQ,OAAO;UACpE,KAAK,aAAa;YACd,OAAOpB,aAAa,CAACY,IAAI,CAACO,MAAM,IAAInB,aAAa,CAACY,IAAI,CAACQ,OAAO;UAClE;YACI,OAAOpB,aAAa,CAACY,IAAI,CAACQ,OAAO;QACzC;MAEJ,KAAK,MAAM;QACP,MAAMc,eAAe,GAAGhJ,WAAW,aAAXA,WAAW,wBAAA4I,sBAAA,GAAX5I,WAAW,CAAEgB,OAAO,CAAC,CAAC,CAAC,cAAA4H,sBAAA,uBAAvBA,sBAAA,CAAyB9H,WAAW,CAAC,CAAC;QAC9D,QAAQkI,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAE9H,WAAW,CAAC,CAAC,CAAC4H,IAAI,CAAC,CAAC;UACzC,KAAK,YAAY;YACb,OAAOhC,aAAa,CAAChJ,IAAI,CAAC6J,KAAK,IAAI9J,SAAS;UAChD,KAAK,eAAe;YAChB,OAAOiJ,aAAa,CAAChJ,IAAI,CAAC8J,QAAQ,IAAI9J,IAAI;UAC9C,KAAK,YAAY;YACb,OAAOgJ,aAAa,CAAChJ,IAAI,CAAC+J,KAAK,IAAI9J,SAAS;UAChD,KAAK,OAAO;YACR,OAAO+I,aAAa,CAAChJ,IAAI,CAACE,KAAK,IAAIA,KAAK;UAC5C;YACI,OAAOF,IAAI;QACnB;MAEJ,KAAK,cAAc;QACf,MAAMmL,uBAAuB,GAAGjJ,WAAW,aAAXA,WAAW,wBAAA6I,sBAAA,GAAX7I,WAAW,CAAEgB,OAAO,CAAC,CAAC,CAAC,cAAA6H,sBAAA,uBAAvBA,sBAAA,CAAyB/H,WAAW,CAAC,CAAC;QACtE,QAAQmI,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAE/H,WAAW,CAAC,CAAC,CAAC4H,IAAI,CAAC,CAAC;UACjD,KAAK,YAAY;YACb,OAAOhC,aAAa,CAAC/H,YAAY,CAAC1B,SAAS,IAAIqB,qBAAqB;UACxE,KAAK,MAAM;YACP,OAAOoI,aAAa,CAAC/H,YAAY,CAAC2I,IAAI,IAAI/I,gBAAgB;UAC9D,KAAK,YAAY;YACb,OAAOmI,aAAa,CAAC/H,YAAY,CAACxB,SAAS,IAAIqB,qBAAqB;UACxE,KAAK,YAAY;YACb,OAAOkI,aAAa,CAAC/H,YAAY,CAAClB,SAAS,IAAIgB,qBAAqB;UACxE,KAAK,MAAM;YACP,OAAOiI,aAAa,CAAC/H,YAAY,CAACjB,IAAI,IAAIgB,gBAAgB;UAC9D;YACI,OAAOC,YAAY;QAC3B;MAGF,KAAK,MAAM;QACP,OAAO+H,aAAa,CAAC7I,IAAI,IAAIA,IAAI;MAErC,KAAK,KAAK;QACN,OAAO6I,aAAa,CAAC5I,GAAG,IAAIA,GAAG;MAEnC,KAAK,MAAM;QACP,OAAO4I,aAAa,CAAC3I,IAAI,IAAIA,IAAI;MAErC,KAAK,MAAM;QACP,OAAO2I,aAAa,CAAC1I,IAAI,IAAIA,IAAI;MAErC,KAAK,KAAK;QACN,OAAO0I,aAAa,CAACzI,GAAG,IAAIA,GAAG;MAEnC,KAAK,QAAQ;QACT,OAAOyI,aAAa,CAACxI,MAAM,IAAIA,MAAM;MAEzC,KAAK,SAAS;QACV,OAAOwI,aAAa,CAACvI,OAAO,IAAIA,OAAO;MAE3C,KAAK,MAAM;QACP,OAAOuI,aAAa,CAACtI,IAAI,IAAIA,IAAI;MAErC,KAAK,SAAS;QACV,OAAOsI,aAAa,CAACsB,KAAK,CAACC,OAAO,IAAIhL,SAAS;MAEnD,KAAK,OAAO;QACZ,OAAOyJ,aAAa,CAACrI,KAAK,IAAIA,KAAK;MAEnC;QACI,OAAOyK,QAAQ;IACvB;EACN,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrB,MAAMlG,YAAY,CAACvD,SAAS,CAAC,CAAC,CAAC;MAC/BD,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAM0J,mBAAmB,GAAI1G,MAAM,IAAK;IAAArD,EAAA;IACtC,MAAM,CAACyD,YAAY,EAAEuG,eAAe,CAAC,GAAGrN,QAAQ,CAAC,EAAE,CAAC;IAEpD,MAAMsN,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,MAAM3G,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5B,MAAM2G,SAAS,GAAG,IAAI3G,IAAI,CAACD,OAAO,CAAC6G,OAAO,CAAC,CAAC,GAAG9G,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;;MAE/D;MACA2G,eAAe,CAACE,SAAS,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEDxN,SAAS,CAAC,MAAM;MACdqN,kBAAkB,CAAC,CAAC,CAAC,CAAC;MACtB,MAAMI,QAAQ,GAAGC,WAAW,CAACL,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC;MACxD,OAAO,MAAMM,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;IACxC,CAAC,EAAE,CAAChH,MAAM,CAAC,CAAC,CAAC,CAAC;;IAEd,OAAOI,YAAY;EACrB,CAAC;EAACzD,EAAA,CAlBI+J,mBAAmB;EAoBzB,MAAMS,qBAAqB,GAAIC,MAAM,IAAK;IACxC,IAAI,CAACA,MAAM,EAAE,OAAO,EAAE;IACtB,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,MAAM,CAAC5E,KAAK,CAAC,CAAC,CAAC,CAAClE,WAAW,CAAC,CAAC;EACvE,CAAC;EAGCoE,OAAO,CAAC6E,GAAG,CAACnK,WAAW,aAAXA,WAAW,wBAAAP,sBAAA,GAAXO,WAAW,CAAEgB,OAAO,CAAC,CAAC,CAAC,cAAAvB,sBAAA,uBAAvBA,sBAAA,CAAyBwB,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;EAGxD,MAAMkJ,QAAQ,GAAGd,mBAAmB,CAACxJ,UAAU,CAAC;EAEhD,oBACEb,OAAA;IAAKiD,SAAS,EAAC,WAAW;IAAAQ,QAAA,GACvB3B,mBAAmB,CAAC,CAAC,eACtB9B,OAAA;MAAKiD,SAAS,EAAC,SAAS;MAAAQ,QAAA,gBACtBzD,OAAA;QAAAyD,QAAA,EAAI;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBxD,OAAA;QAAKiD,SAAS,EAAC,QAAQ;QAAAQ,QAAA,gBACrBzD,OAAA;UAAMoL,EAAE,EAAC,aAAa;UAAA3H,QAAA,EAAC;QAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpCxD,OAAA;UAAKiD,SAAS,EAAC,SAAS;UAAAQ,QAAA,gBACtBzD,OAAA;YAAMiD,SAAS,EAAC,MAAM;YAAAQ,QAAA,eACpBzD,OAAA,CAAC7C,mBAAmB;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eACPxD,OAAA;YAAAyD,QAAA,EAAO1C,WAAW,GAAG,GAAGA,WAAW,CAACiB,IAAI,CAACqJ,QAAQ,GAAG,GAAG;UAAK;YAAAhI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,SAAS;UAAAQ,QAAA,gBACtBzD,OAAA;YAAMiD,SAAS,EAAC,MAAM;YAAAQ,QAAA,eACpBzD,OAAA,CAAC5C,WAAW;cAAAiG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACPxD,OAAA;YAAAyD,QAAA,EAAO1C,WAAW,GAAG,cAAc+B,IAAI,CAAC8C,KAAK,CAAC7E,WAAW,CAACiB,IAAI,CAACsJ,UAAU,CAAC,GAAG,GAAG;UAAK;YAAAjI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1F,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,SAAS;UAAAQ,QAAA,gBACtBzD,OAAA;YAAMiD,SAAS,EAAC,MAAM;YAAAQ,QAAA,eACpBzD,OAAA,CAAC1C,eAAe;cAAA+F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACPxD,OAAA;YAAAyD,QAAA,EAAO1C,WAAW,GAAG,GAAGA,WAAW,CAACiB,IAAI,CAACuJ,QAAQ,MAAM,GAAG;UAAK;YAAAlI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,SAAS;UAAAQ,QAAA,gBACtBzD,OAAA;YAAMiD,SAAS,EAAC,MAAM;YAAAQ,QAAA,eACpBzD,OAAA,CAACzC,MAAM;cAAA8F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACPxD,OAAA;YAAAyD,QAAA,EAAO1C,WAAW,GAAG,GAAG+B,IAAI,CAAC8C,KAAK,CAAC7E,WAAW,CAACyK,IAAI,CAACC,KAAK,CAAC,MAAM,GAAG;UAAK;YAAApI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,SAAS;UAAAQ,QAAA,gBACtBzD,OAAA;YAAMiD,SAAS,EAAC,MAAM;YAAAQ,QAAA,eACpBzD,OAAA,CAACxC,KAAK;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACPxD,OAAA;YAAAyD,QAAA,EAAO1C,WAAW,GAAG,GAAGA,WAAW,CAAC2K,UAAU,GAAG,IAAI,KAAK,GAAG;UAAK;YAAArI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,SAAS;UAAAQ,QAAA,gBACtBzD,OAAA;YAAMiD,SAAS,EAAC,MAAM;YAAAQ,QAAA,eACpBzD,OAAA,CAACvC,OAAO;cAAA4F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACPxD,OAAA;YAAAyD,QAAA,EAAO1C,WAAW,GAAG,GAAGA,WAAW,CAAC4K,MAAM,CAACzE,GAAG,GAAG,GAAG;UAAK;YAAA7D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,SAAS;UAAAQ,QAAA,gBACtBzD,OAAA;YAAMiD,SAAS,EAAC,MAAM;YAAAQ,QAAA,eACpBzD,OAAA,CAACtC,KAAK;cAAA2F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACPxD,OAAA;YAAAyD,QAAA,EACG1C,WAAW,IAAIA,WAAW,CAAC6K,GAAG,IAAI7K,WAAW,CAAC6K,GAAG,CAACC,OAAO,GACtD,YAAY,IAAIhI,IAAI,CAAC9C,WAAW,CAAC6K,GAAG,CAACC,OAAO,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAE,GAC3E;UAAc;YAAAzI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,SAAS;UAAAQ,QAAA,gBACtBzD,OAAA;YAAMiD,SAAS,EAAC,MAAM;YAAAQ,QAAA,eACpBzD,OAAA,CAACrC,MAAM;cAAA0F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACPxD,OAAA;YAAAyD,QAAA,EACG1C,WAAW,IAAIA,WAAW,CAAC6K,GAAG,IAAI7K,WAAW,CAAC6K,GAAG,CAACG,MAAM,GACrD,WAAW,IAAIlI,IAAI,CAAC9C,WAAW,CAAC6K,GAAG,CAACG,MAAM,GAAG,IAAI,CAAC,CAACD,kBAAkB,CAAC,CAAC,EAAE,GACzE;UAAa;YAAAzI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENxD,OAAA;MAAKiD,SAAS,EAAC,cAAc;MAAAQ,QAAA,EAC1BtC,OAAO,gBACNnB,OAAA;QAAAyD,QAAA,EAAK;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAErBxD,OAAA,CAAAE,SAAA;QAAAuD,QAAA,gBACEzD,OAAA;UAAKiD,SAAS,EAAC,QAAQ;UAAAQ,QAAA,gBACrBzD,OAAA;YAAKiD,SAAS,EAAC,QAAQ;YAAAQ,QAAA,eACvBzD,OAAA;cAAKiD,SAAS,EAAC,UAAU;cAAAQ,QAAA,gBACrBzD,OAAA;gBAAAyD,QAAA,GAAOqH,qBAAqB,CAACrK,IAAI,CAAC,EAAC,KAAG;cAAA;gBAAA4C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7CxD,OAAA;gBAAAyD,QAAA,EAAO0H;cAAQ;gBAAA9H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNxD,OAAA;YAAKiD,SAAS,EAAC,SAAS;YAAAQ,QAAA,gBACtBzD,OAAA;cACEgM,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,aAAa;cACzBC,KAAK,EAAEvL,SAAU;cACjBwL,SAAS,EAAEjC,YAAa;cACxBkC,QAAQ,EAAGjC,CAAC,IAAKvJ,YAAY,CAACuJ,CAAC,CAACkC,MAAM,CAACH,KAAK,CAAE;cAC9CjJ,SAAS,EAAC;YAAc;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACFxD,OAAA;cAAQiD,SAAS,EAAC;YAAe;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,cAAc;UAAAQ,QAAA,gBAC3BzD,OAAA;YAAKiD,SAAS,EAAC,uBAAuB;YAAAQ,QAAA,gBACpCzD,OAAA;cAAGiD,SAAS,EAAC,aAAa;cAAAQ,QAAA,EACvB1C,WAAW,GAAG,GAAG+B,IAAI,CAAC8C,KAAK,CAAC7E,WAAW,CAACiB,IAAI,CAACJ,IAAI,CAAC,GAAG,GAAG;YAAK;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D,CAAC,eACJxD,OAAA;cAAKiD,SAAS,EAAC,YAAY;cAAAQ,QAAA,gBACzBzD,OAAA;gBAAKiD,SAAS,EAAC,iBAAiB;gBAAAQ,QAAA,eAC9BzD,OAAA;kBAAKiD,SAAS,EAAC,WAAW;kBAAAQ,QAAA,EACvB1C,WAAW,GAAG,MAAM+B,IAAI,CAAC8C,KAAK,CAAC7E,WAAW,CAACiB,IAAI,CAAC8D,QAAQ,CAAC,GAAG,GAAG;gBAAK;kBAAAzC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACNxD,OAAA;gBAAKiD,SAAS,EAAC,iBAAiB;gBAAAQ,QAAA,eAC9BzD,OAAA;kBAAKiD,SAAS,EAAC,UAAU;kBAAAQ,QAAA,EACtB1C,WAAW,GAAG,MAAM+B,IAAI,CAAC8C,KAAK,CAAC7E,WAAW,CAACiB,IAAI,CAACgE,QAAQ,CAAC,GAAG,GAAG;gBAAK;kBAAA3C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNxD,OAAA;YAAGiD,SAAS,EAAC,WAAW;YAAAQ,QAAA,EAAE1C,WAAW,GAAGA,WAAW,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACF,WAAW,GAAG;UAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpF,CAAC,eAINxD,OAAA;UAAKiD,SAAS,EAAC,UAAU;UAAAQ,QAAA,EACtBpC,YAAY,CAACqB,GAAG,CAAC,CAACqF,GAAG,EAAEnF,KAAK,kBAC3B5C,OAAA;YAAiBiD,SAAS,EAAE,OAAOL,KAAK,KAAK,CAAC,GAAG,WAAW,GAAG,EAAE,EAAG;YAAAa,QAAA,gBAClEzD,OAAA;cAAAyD,QAAA,EAAK,IAAII,IAAI,CAACkE,GAAG,CAACtC,IAAI,CAAC,CAAC6G,cAAc,CAAC,OAAO,EAAE;gBAAEC,OAAO,EAAE;cAAO,CAAC;YAAC;cAAAlJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1ExD,OAAA;cAAAyD,QAAA,GAAIsE,GAAG,CAACnG,IAAI,EAAC,MAAC;YAAA;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAClBxD,OAAA;cAAAyD,QAAA,EAAIsE,GAAG,CAAClG;YAAW;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAHhBZ,KAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENxD,OAAA;UAAKiD,SAAS,EAAC,6BAA6B;UAAAQ,QAAA,eAC1CzD,OAAA;YAAKiD,SAAS,EAAC,mBAAmB;YAAAQ,QAAA,EAC/BhC,gBAAgB,CAACiB,GAAG,CAAC,CAACyE,QAAQ,EAAEvE,KAAK,kBACpC5C,OAAA;cAAiBiD,SAAS,EAAC,wBAAwB;cAAAQ,QAAA,gBACjDzD,OAAA;gBAAAyD,QAAA,EAAO0D,QAAQ,CAACxF;cAAI;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5BxD,OAAA;gBAAAyD,QAAA,EAAO0D,QAAQ,CAACvF;cAAI;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5BxD,OAAA;gBAAAyD,QAAA,EAAO0D,QAAQ,CAACtF;cAAW;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GAH3BZ,KAAK;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,eACN;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnD,GAAA,CAphBID,GAAG;AAAAoM,EAAA,GAAHpM,GAAG;AAshBT,eAAeA,GAAG;AAAC,IAAAoM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}